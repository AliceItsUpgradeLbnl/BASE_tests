DEVICENAME  CMDNAME SLADDR DB0 DB1 DB2 ACCESS SIZE WRMASK  RDMASK    WRBYTES(WR) RDBYTES(WR) WRBYTES(RD) RDBYTES(RD) DESCRIPTION/COMMENT(LINE)
SCI18IS602B CMD0    28     01  -   -   W      ?    ?       -         ?           0           -           -           write_to_spi_0(I2C)
SCI18IS602B CMD1    28     02  -   -   W      ?    ?       -         ?           0           -           -           write_to_spi_1(I2C)
SCI18IS602B CMD2    28     04  -   -   W      ?    ?       -         ?           0           -           -           write_to_spi_2(I2C)
SCI18IS602B CMD3    28     08  -   -   W      ?    ?       -         ?           0           -           -           write_to_spi_3(I2C)
SCI18IS602B CMD4    28     0F  -   -   W      ?    ?       -         ?           0           -           -           write_to_all_spi_devices(I2C)
SCI18IS602B CMD5    28     -   -   -   R      ?    -       ?         -           -           0           ?           read_from_buffer(I2C)
MAX31865    CMD0    -      80  *   -   W0     8    FF      -         2           0           -           -           write_control_reg(SPI_LINE, internal)
MAX31865    CMD1    -      00  -   -   R0     8    -       DD        -           -           1           1           read_control_reg(SPI_LINE, internal)
MAX31865    CMD2    -      01  -   -   R      8    -       FF        -           -           1           1           read_rtd_msb(SPI_LINE, internal)
MAX31865    CMD3    -      02  -   -   R      8    -       FE        -           -           1           1           read_rtd_lsb(SPI_LINE, internal)
ADS7830     CMD0    48     *   -   -   W      8    FC      -         1           0           -           -           write_control_reg(I2C)
ADS7830     CMD1    48     -   -   -   R      8    -       FF        -           -           0           1           read_value(I2C)
ADC128D818  CMD0    1D     00  *   -   RW     8    8B      8B        2           0           1           1           access_control_reg(I2C)
ADC128D818  CMD1    1D     0B  *   -   RW     8    07      07        2           0           1           1           access_advanced_control_reg(I2C)
ADC128D818  CMD2    1D     20  *   -   R      8    -       FF        -           -           1           1           access_channel_0_data(I2C)
ADC128D818  CMD3    1D     21  *   -   R      8    -       FF        -           -           1           1           access_channel_1_data(I2C)
ADC128D818  CMD4    1D     22  *   -   R      8    -       FF        -           -           1           1           access_channel_2_data(I2C)
ADC128D818  CMD5    1D     23  *   -   R      8    -       FF        -           -           1           1           access_channel_3_data(I2C)
ADC128D818  CMD6    1D     24  *   -   R      8    -       FF        -           -           1           1           access_channel_4_data(I2C)
ADC128D818  CMD7    1D     25  *   -   R      8    -       FF        -           -           1           1           access_channel_5_data(I2C)
ADC128D818  CMD8    1D     26  *   -   R      8    -       FF        -           -           1           1           access_channel_6_data(I2C)
ADC128D818  CMD9    1D     27  *   -   R      8    -       FF        -           -           1           1           access_channel_7_data(I2C)
AD7997      CMD0    22     02  *   *   W0    16    0FFF    -         3           0           -           -           write_control_register(I2C)
AD7997      CMD1    22     -   -   -   R0    16    -       0FFF      -           -           0           2           read_control_register(I2C, to be issued after a write op)
AD7997      CMD2    22     03  *   -   W1     8    C7      -         2           0           -           -           write_cycletime_register(I2C)
AD7997      CMD3    22     *   -   -   R1     8    -       C7        -           -           0           1           read_cycletime_register(I2C, to be issued after a write op)
AD7997      CMD4    22     70  -   -   R      64MX -       FF        -           -           1           8MX         read_data_from_enabled_channels(I2C, to be issued after setting config reg, use rep start) 
PCF8574     CMD0    38     *   -   -   RW     8    FF      FF        1           0           0           1           access_main_register(I2C)
TCA9535     CMD0    27     00  -   -   R      8    -       FF        -           -           1           1           read_from_input_port_0(I2C, use rep start)
TCA9535     CMD1    27     01  -   -   R      8    -       FF        -           -           1           1           read_from_input_port_1(I2C, use rep start)
TCA9535     CMD2    27     02  *   -   RW     8    FF      FF        2           0           1           1           access_output_port_0(I2C)
TCA9535     CMD3    27     03  *   -   RW     8    FF      FF        2           0           1           1           access_output_port_1(I2C)
TCA9535     CMD4    27     06  *   -   RW     8    FF      FF        2           0           1           1           access_config_port_0(I2C)
TCA9535     CMD5    27     07  *   -   RW     8    FF      FF        2           0           1           1           access_config_port_1(I2C)
AD5671R     CMD0    0C     30  *   *   W      16   FFF0    -         3           0           -           -           write_an_update_output_0(I2C)
AD5671R     CMD1    0C     31  *   *   W      16   FFF0    -         3           0           -           -           write_an_update_output_1(I2C)
AD5671R     CMD2    0C     32  *   *   W      16   FFF0    -         3           0           -           -           write_an_update_output_2(I2C)
AD5671R     CMD3    0C     33  *   *   W      16   FFF0    -         3           0           -           -           write_an_update_output_3(I2C)
AD5671R     CMD4    0C     34  *   *   W      16   FFF0    -         3           0           -           -           write_an_update_output_4(I2C)
AD5671R     CMD5    0C     35  *   *   W      16   FFF0    -         3           0           -           -           write_an_update_output_5(I2C)
AD5671R     CMD6    0C     36  *   *   W      16   FFF0    -         3           0           -           -           write_an_update_output_6(I2C)
AD5671R     CMD7    0C     37  *   *   W      16   FFF0    -         3           0           -           -           write_an_update_output_7(I2C)
AD5671R     CMD8    0C     B0  *   *   W      16   FFF0    -         3           0           -           -           write_an_update_all_outputs(I2C)